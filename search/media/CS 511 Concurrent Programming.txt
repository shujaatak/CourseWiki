CS 511 Concurrent Programming
        How concurrency arises on a single computer; 
        Processes and threads on UNIX;
        Mechanisms and needs for communication and co-ordination across 
        concurrent processes. 
      
        Synchronous and Asynchronous events; 
        Signals on UNIX;
        Uncontrolled concurrency: Race conditions.
        Safety properties and Reentrancy.
      
        Mutual exclusion and preemtive scheduling.
        Desired properties of mutual exclusion. 
        Mechanisms to achieve mutual exclusion.  
        Algorithms for mutual exclusion: strict alternation, Peterson's algorithm, Dekker's algorithm.
       
        Pthreads.  Reader/writer and hierarchical locks.  Deadlock
	avoidance, detection, and prevention.
      
        Pthreads.  Scheduling algorithms and issues.    
        Thread models: workers, pipeline, on-demand and thread pool.  
        Dining philosophers, producer consumers. 
      
          Semaphore and Monitor concepts.
      
          Semaphore and Monitor concepts.
      
        Java threads.
      
          Java threads.
      
        Actors model.
      
          Erlang.
      
        Formal reasoning about concurrency: state models, partial
	correctness, liveness.  Defining safety properties.  Program
	correctness: interleavings, model checking.
      
        SPIN model checker.
      
        Flex time.
      